pipeline{
        agent{
             docker{
              image 'maven:3.6.1-jdk-8-slim'
              args '-v $HOME/.m2:/root/.m2'
             }
        }
        stages{
          stage('build'){
            steps{
             echo 'building worker app'
             dir('worker'){
              sh 'mvn compile'
             }
           }
         }

         stage('test'){
           steps{
            echo 'running unit tests on worker app'
            dir('worker'){
             sh 'mvn clean test'
            }
          }
        }
        stage('package'){
          when{
            branch 'master'
            changeset '**/worker/**'
          
          }
          steps{
            echo 'Packaging worker app'
            dir('worker'){
              sh 'mvn package -DskipTests'
              archiveArtifacts artifacts: '**/target/*.jar', fingerprint:true
            }
          }
         }
       
        stage('docker-package'){
          steps{
            echo 'packaging maven app with docker'
            script{
              docker.withRegistry('https://index.docker.io/v1', 'dockerlogin')
              def workerImage = docker.build("kpkia1/worker:v${env.BUILD_ID}","./worker")
              workerImage.push()
              workerImage.push("{${env.BRANCH_NAME}") 
           }
          }
        }

       }
     
       post{
         
        always{
             
            echo 'Pipeline for worker has been completed'
        }
        success{

            slackSend (channel:"delivery-continuous-integration", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
         failure{

            slackSend (channel:"delivery-continuous-integration", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }

      }
    
    
}
